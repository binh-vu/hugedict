name: CI

on:
  push:
  pull_request:

jobs:
  linux:
    strategy:
      matrix:
        target: [x86_64, i686, armv7l] #, armv7l, aarch64, s390x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#       - name: Install Rust toolchain
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           profile: minimal
#           default: true
#       - name: Set up QEMU
#         id: qemu
#         uses: docker/setup-qemu-action@v1
#         if: matrix.target != 'x86_64' || matrix.target != 'i686'
#         with:
#           image: tonistiigi/binfmt:latest
#           platforms: all
      # - name: Run test
      #   run: cargo test --no-default-features --features pyo3/auto-initialize
      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          target: ${{ matrix.target }}
          command: build
          args: --release -o dist
      - run: cat /home/runner/work/hugedict/hugedict/run-maturin-action.sh
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run test
  #       run: cargo test --no-default-features --features pyo3/auto-initialize
  #     - uses: messense/maturin-action@v1
  #       with:
  #         command: build
  #         args: --release --no-sdist -o dist
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: wheels
  #         path: dist

  # macos:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run test
  #       run: cargo test --no-default-features --features pyo3/auto-initialize
  #     - uses: messense/maturin-action@v1
  #       with:
  #         command: build
  #         args: --release --no-sdist -o dist --universal2
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: wheels
  #         path: dist

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: "startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/master')"
  #   needs: [macos, windows, linux]
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheels
  #     - name: Publish to PyPI
  #       uses: messense/maturin-action@v1
  #       env:
  #         MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  #       with:
  #         command: upload
  #         args: --skip-existing *
